let page = 0;
let img;
// circle
var song;
var check;
let bubbles = [];
let score = 0;
let level = 1;
////////////////// ping pong
var scores = 0;
var levels = 1;
xpos = 200
ypos = 200
dx = 5;
dy = 3;


///////////////////////// circles
class Bubble {
  constructor(x, y, r) {
    this.x = x;
    this.y = y;
    this.r = r;
    this.col = color(255,0,100);
  }

  clicked(px, py) {
    let d = dist(px, py, this.x, this.y);
    if (d < this.r) {
      score++;
      this.col = color(0,0,0,0);
      strokeWeight(4)
      stroke(0)
      if ((level == 1) && (score == 5)) {
        level++;
        score = 0;
      }
      if ((level == 2) && (score == 5)) {
        level++;
        score = 0;
      }
    }
  }
  
  correct(px, py) {
    let d = dist(px, py, this.x, this.y);
    if (d < this.r) {
      check.play();
    }
  }

  appear() {
    stroke(255);
    strokeWeight(4)
    fill(this.col, 60);
    ellipse(this.x, this.y, this.r);
  }
} 
//////////////////////////////////////////

function preload() {
  img = loadImage('croc frog.jpg');
  //song = loadSound("");
  check = loadSound("check mark sound effect.mp3");
}

function setup() {
  createCanvas(400, 400);
  
  // circle
  for (let i = 0; i < 20; i++) {
        let x = random(width);
        let y = random(height);
        let r = 40;
        let b = new Bubble(x, y, r);
        bubbles.push(b);
  }
}

function draw() {
  background(220);
  fill(0, 255, 0);
  rect(0, 50, 200, 75);
  fill(255, 0, 255);
  rect(0, 150, 200, 75);
  fill(255, 0, 0);
  rect(0, 250, 200, 75);
  textSize(50)
  fill(255);
  text('START', 20, 106);
  text('EXIT', 44, 300);
  textSize(26);
  text('INSTRUCTIONS', 5, 200);
  image(img, 200, 100, 300, 200);
  
  if (page == 0) {
    //song.pause();
  }
  
  if (page == 1){
    background(220);
    fill('pink');
    rect(200, 50, 200, 75);
    fill('blue');
    rect(200, 150, 200, 75);
    fill(255, 0, 0);
    rect(200, 250, 200, 75);
    textSize(50)
    fill(255);
    text('circles', 220, 106);
    text('trace', 230, 200);
    text('pingpong', 200, 300);
    fill(0)
    textSize(20)
    text('Right Click to return to MENU', 200, 30)
    if (mouseButton == RIGHT) {
      page = 0;
    }
  }
  
  if (page == 2) {
    background(255, 0, 255)
    textSize(20)
    text('Right Click to return to MENU', 100, 30)
    textSize(15)
    text('There are 3 games that you can play', 20, 70)
    text('CIRCLES: you will use you mouse to click circles', 20, 100)
    text('every correct click will earn you a point and check sound' , 20, 120)
    text('TRACE: you will use your mouse to trace to destination', 20, 170)
    text('without touching border, next level when complete',20,190)
    text('PINGPONG: use your mouse to control pad, you earn', 20, 240)
    text('score when you bounce the ball back', 20 , 260)
    if (mouseButton == RIGHT) {
      page = 0
    }
  }
  
  if (page == 3) {
    background(255, 0, 0)
    textSize(30)
    text('COME AGAIN SOON!', 30, height / 2)
  }
  
  if (page == 4) {
    background(0);
    noStroke()
    fill('orange');
    text("Score: " + score, 10, 40);
    text("Level: " +level, 10, 70)
    textSize(25);
    //song.play();
    check.setVolume(0.1);
    //song.setVolume(0.2);
    textSize(20)
    fill('white')
    text('Right Click to return to MENU', 125, 40)
    if (mouseButton == RIGHT) {
      page = 0;
    }
    
    if (level == 1){
      level1();  
    }
  
    if (level == 2){
      level2();
    }
  
    if (level == 3){
      level3();
    }
  }
  
  if (page == 5) {
    background(220);
    fill('black');
    rect(0,180,10,10);
    fill('black');
    rect(390,180,10,10);
    fill('white');
    circle(50,50,250);
    circle(200,50,250);
    circle(350,50,250);
    circle(50,320,250);
    circle(200,320,250);
    circle(350,320,250);
    textSize(20)
    fill('black')
    text('Right Click to return to MENU', 200, 60)
    if (mouseButton == RIGHT) {
      page = 0;
    }
    
    if (mouseIsPressed) {
    ellipse(mouseX,mouseY,5,5);
  }
  if (dist(50,50,mouseX,mouseY) < 125 ||dist(200,50,mouseX,mouseY) < 125|| dist(350,50,mouseX,mouseY) < 125 || dist(50,320,mouseX,mouseY) < 125 || dist(200,320,mouseX,mouseY) < 125 || dist(350,320,mouseX,mouseY) < 125) {
    fill('black');
    strokeWeight(2)
    text('Looks like you traced outside of the lines!',10,30);
  }
  else {
    fill('black');
    strokeWeight(2)
    text('Nicely done! Onto the next level.',10,30);
  }
  }
  
  if (page == 6) {
    background('white');
    rect(10,ypos,10,80);
    rect(380,mouseY,10,80);
    ellipse(xpos,ypos,20,20);
      if (xpos>=width-20 || xpos==20)
    {
      dx = -dx
    }
  if (ypos>=height-10 || ypos==20)
    {
      dy = -dy
    }
  fill('black');
  text('PONG GAME ',163,20);
  text('Score:'+scores , 320,20);
  text('Level:'+levels,20,20);
  for (var i=0; i < 400; i+=20) {
     line(200,i,200,i+10);
  } 
  xpos = xpos +dx;
  ypos = ypos +dy;
 
  
  if(ypos==mouseY){
    scores = scores+1;
    
  }
  if(scores==5 && levels ==1){
     levels = levels+1;
    text('Level Successful' ,250,40);
    scores=0;
  }if(scores==10 && levels ==2){
    text('Level Successful',320,40);
    levels = levels+1;
    scores=0;
  }
  if(scores==15 && levels ==3){
    text('Level Successful',320,40);
    levels = levels +1;
    scores=0;
  }
  }
}


function mouseClicked() {
  if (page == 0) {
    if (mouseX < 200 && mouseX > 0) {
      if (mouseY < 125 && mouseY > 50) {
        page = 1
      }
      if (mouseY < 225 && mouseY > 150) {
        page = 2
      }
      if (mouseY < 325 && mouseY > 250) {
        page = 3
      }
    }
  }
  if (page == 1) {
    if (mouseX < 400 && mouseX > 250) {
      if (mouseY < 125 && mouseY > 50) {
        page = 4
      }
      if (mouseY < 225 && mouseY > 150) {
        page = 5
      }
      if (mouseY < 325 && mouseY > 250) {
        page = 6
      }
    }
  }
}


//////////////////////////////////////////////////////////////
    
function mousePressed() {
  for (let i = 0; i < bubbles.length; i++) {
    bubbles[i].clicked(mouseX, mouseY);
    bubbles[i].correct(mouseX, mouseY);
  }
}

function level1() {
  for (let i = 0; i < 5; i++) {
    bubbles[i].appear(); 
  }
}

function level2() {
  level = 2;
  for (let i = 0; i < 10; i++) {
    bubbles[i].appear(); 
  }
}

function level3() {
  level = 3;
  for (let i = 0; i < 20; i++) {
    bubbles[i].appear(); 
  }
}

/////////////////////////////////////////////////////
